클래스 상속
프로그램에서는 자식이 부모를 선택한다. extends

public class 자식클래스 extends 부모클래스{}

자바는 다중상속을 허용하지않는다.
-> public class 자식클래스 extends 부모1,부모2,부모3{} x
   public class 자식클래스 extends 부모 implements 인터페이스1,인터2,인터3,.....{} o


2. 부모 생성자 호출
    super() 컴파일 과정에서 자동 추가된다.
    이것은 부모의 기본 생성자를 호출한다.
    만약 부모 클래스에 기본 생성자가 없으면, 자식생성자 선언에서 컴파일 에러 발생한다.

3. 메소드 재정의(메소드 오버라이딩)
    상속된 메소드를 자식 클래스에서 새롭게 재정의 하는 방법

    우리는 메소드 오버라이딩을 왜 쓸까?
    부모 메소드는 숨겨주고, 자식 메소드만 사용되기 때문에, 부모 메소드의 일부가 변경된다 하더라도
    중복된 내용을 자식 메소드만 사용되기 때문에, 부모 메소드의 일부가 변경된다 하더라도
    중복된 내용을 자식 메소드도 가지고 있어야 한다.

    자식 메소드와 부모 메소드의 공동 작업 처리 기법을 이용하면 부모와 자식의 기능을 적절히 조율해서 사용

4. final 클래스 , final 메소드

    final 필드 : 초기값 설정 후 값을 변경할 수 없다.
    final 클래스 : 클래스 선언 시 final 을 클래스 앞에 붙이면 최종적인 클래스이므로 더 이상 상속을 할 수 없다.
        -> 부모클래스가 될 수 없으므로 자식클래스를 만들 수 없다.
    final 메소드 : 오버라이딩 할 수 없다.

//
1. Car 클래스
    stop() 메소드를 final 선언하세요.
    - 차를 멈춤 메세지 출력 후 speed를 0으로 셋팅합니다.
    speedUp() 는 호출될때마다 speed가 1씩 증가

2. SportsCar 클래스
    Car 클래스를 상속합니다.
    speedUp() 기능을 호출시 10씩 증가하도록 재정의합니다.

3. CarMain 클래스
    1. Car 클래스 타입 mycar1 생성하여 speed를 3으로 셋팅하고 현재 speed 값 출력
    2. SporsCar 타입 mycar2 생성하여 speed를 50으로 셋팅하고 현재 speed 값 출력

4. protected 접근 제한자
    public, private 접근 제한자를 사용하여 객체 외부에서 필드, 생성자, 메소드의 접근 여부를 결정
    접근대상 : 필드, 생성자, 메소드
    제한 범위 :
        public -> 동일 패키지, 다른 패키지 제한 없이 모두 접근 ㄱ나능
        private -> private 내 클래스만 접근 가능
        protected -> protected는 상속과 관련됨
                  -> 같은 패키지 이거나 자식 객체만 사용(접근) 가능
    protected 는 상속과 관련됨

5. 타입변환(캐스팅)
    타입을 다른 타입으로 변환하는 것을 의미
    클래스의 타입변환은 상속관계에서 발생한다.
    - 자동타입변환(promotion) : 자동으로 타입변환이 일어난다.
    -


//실습
Cat 객체를 생성하고 이것을 Animal 변수에 대입하세요.

다형성 : 사용방법은 동일하지만 실행결과가 다양하게 나오는 성질
객체 사용 방법이 동일하다는 것은 동일한 메소드를 가지고 있다는 뜻

타이어
- 한국타이어
- 금호타이어
- 넥센타이어


추상클래스
Abstract 사전적의미 : 실체 간에 공통되는 특성을 추출 한 것
이 클래스들의 공통적인 필드나 메소드를 추출해서 선언한 클래스를 추상 클래스
추상클래스는 실체 클래스들의 부모 역할

#봉인된(sealed) 클래스
    기본적으로 final클래스를 제외한 모든 클래스는 부모클래스가 될 수 있다.
    Java15부터 무분별한 자식 클래스 생성을 방지하기 위해 도입됨

    public sealed class Person permits Employee,Manager{...}
    final은 더 이상 상속 할 수없다.
    public final class Employee extends Person{...}
    또는
    public non-sealed class Manager extends Person{...}
    봉인을 해제한다. Manager 클래스는 자식클래스를 만들 수 있다.
    public class Director extends Manager{...}

      -> Person클래스는 Employee,Manager클래스만 자식클래수로 둘 수 있다.

      sealed 키워드를 사용하면 permits 키워드 뒤에 상속 가능한 자식 클래스를 지정한다.



